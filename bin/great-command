#!/bin/bash

if [ \
  -f "/root/aiueo.txt" \
  -a -f "/root/kakikukeko.txt" \
  -a -f "/usr/bin/great-command" \
  -a ! -f "/usr/local/bin/great-command" \
]; then

  if [ \
    -d "/root/hoge" \
    -a "$(test -f '/root/hoge/123.txt' && cat '/root/hoge/123.txt' || echo '')" = "abc" \
    -a ! -d "/usr/local/amenbo_akaina_aiueo" \
  ]; then
    echo '
[ゴール]

おめでとうございます。
以上で本研修を終了します。

簡単なファイル・ディレクトリ操作が可能になりました。
ここまでで

- cd
- echo 
- cat
- ls
- touch
- cp
- mv
- rm
- mkdir

のようなコマンドたちに触れてきました。

復習になりますが、コマンドと呼ばれるモノの実体は
  "PATHに設定されたディレクトリ内に存在する実行可能ファイル"
のことでした。
（cd や echo などいくつかのコマンドに関しては シェルのビルトインとして存在しており実行可能ファイルがないこともあります）

これから皆さんは git や docker コマンドなど多彩なコマンドと出会うと思います。

考えられない機能を有したコマンドとも出会うと思いますが、この研修で習ったことは全てのコマンドに対して共通して成り立つ基礎中の基礎なので、どうか忘れず恐れずCLIライフを送ってください。

お疲れさまでした。

  exit

で終了できます。
'
  else
    echo '
[指示4]

ファイル操作は無事できたようですね。
では次はディレクトリ操作です。
作成、コピー、移動、削除をしてみましょう。

1. 「dir」というディレクトリを /rootディレクトリ内に作成してください。
2. 「dir」ディレクトリ内に 「abc」を内容とする「123.txt」を作成してください。（ファイル操作の復習）
3. 「dir」ディレクトリの名前を「hoge」に変えてください。
4. /usr/local/amenbo_akaina_aiueo ディレクトリを削除してください。
5. また great-command を実行してみてください。


---

作成:

  mkdir ディレクトリパス

---

コピー:

  cp -r コピー元 コピー先

* cp に r オプションを付けます
* 空のディレクトリを削除する場合はrオプションはいりません

---

移動:

  mv コピー元 コピー先

* リネームもmvでやります。

---

削除:

  rm -r ディレクトリパス

* rm に r オプションを付けます

---
'
  fi
  
else
  echo '
[指示3]

これで任意のディレクトリにある実行ファイルの実行方法を学びました。

次はファイルの操作です。
作成、コピー、移動、削除をしてみましょう。

1. 「aiueo.txt」というファイルを/rootディレクトリ内に作成してください。
2. 「aiueo.txt」をコピーして「kakikukeko.txt」ファイルを同じディレクトリに作ってください。
3. great-command 実行ファイルを /usr/bin ディレクトリへ移動してください。
4. /usr/local/amenbo_akaina_aiueo/next.txt ファイルを削除してください。
5. 全てが完了したら great-command を実行してください。

---

作成:
やり方が色々あるので、一部ご紹介

  ---
  空のファイル作成:

    touch ファイルパス

  * 本来は指定したファイルのタイムスタンプを変更するコマンド
  ---
  内容入りのファイル作成:

    echo 'ファイルの内容' > ファイルパス
  ---

---

コピー:

  cp コピー元ファイルパス コピー先ファイルパス

---

移動:

  mv 移動元ファイルパス　移動先ファイルパス

* リネームもmvでやります

---

削除

  rm ファイルパス

---'
fi
